name: PHPUnit
on:
  push:
    branches:
      - master
    tags:
      - "*.*.*"
  pull_request:
    branches:
      - master

jobs:
  Build:
    runs-on: 'ubuntu-latest'
    container:
      image: 'byjg/php:${{ matrix.php-version }}-cli'
      options: --user root
    strategy:
      matrix:
        php-version:
          - "8.3"
          - "8.2"
          - "8.1"

    services:
      http_test_server:
        image: byjg/php:${{ matrix.php-version }}-fpm-nginx
        ports:
          - "8080:80"
        volumes:
          - data:/var/www/html
        options: >-
          --health-cmd="echo 'OK'"
          --health-interval=10s
          --health-timeout=20s
          --health-retries=10

    env:
      HTTP_TEST_HOST: "http_test_server"
      HTTP_TEST_PORT: "80"

    steps:
      - uses: actions/checkout@v4
      - name: Prepare Test Server
        run: |
          apk add --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/community docker
          docker cp "$PWD/tests/server/multirequest.php" "$(docker ps | grep nginx | cut -d' ' -f1):/var/www/html/multirequest.php"
          docker cp "$PWD/tests/server/redirect.php" "$(docker ps | grep nginx | cut -d' ' -f1):/var/www/html/redirect.php"
          docker cp "$PWD/tests/server/rest.php" "$(docker ps | grep nginx | cut -d' ' -f1):/var/www/html/rest.php"
          docker cp "$PWD/tests/server/soap.php" "$(docker ps | grep nginx | cut -d' ' -f1):/var/www/html/soap.php"
          docker cp "$PWD/tests/server/soap.wsdl" "$(docker ps | grep nginx | cut -d' ' -f1):/var/www/html/soap.wsdl"
      - run: composer install
      - run: ./vendor/bin/phpunit


  Psalm:
    name: Psalm Static Analyzer
    runs-on: ubuntu-latest
    permissions:
      # for github/codeql-action/upload-sarif to upload SARIF results
      security-events: write
    container:
      image: 'byjg/php:8.3-cli'

    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Composer
        run: composer install

      - name: Psalm
        # Note: Ignoring error code 2, which just signals that some
        # flaws were found, not that Psalm itself failed to run.
        run: ./vendor/bin/psalm
          --show-info=true
          --report=psalm-results.sarif || [ $? = 2 ]

      - name: Upload Analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: psalm-results.sarif


  Documentation:
    if: github.ref == 'refs/heads/master'
    needs: Build
    uses: byjg/byjg.github.io/.github/workflows/add-doc.yaml@master
    with:
      folder: php
      project: ${{ github.event.repository.name }}
    secrets: inherit

